package com.mit.entity;

// Generated 25 avr. 2016 17:35:48 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Contrattache generated by hbm2java
 */
@Entity
@Table(name = "contrattache", catalog = "mitdb")
public class Contrattache implements java.io.Serializable {

	private Integer idContrat;
	private Tache tache;
	private Membre membre;
	private Contrat contrat;
	private Integer cout;
	private Date dateDebut;
	private Date dateFin;

	public Contrattache() {
	}

	public Contrattache(Tache tache, Membre membre, Contrat contrat) {
		this.tache = tache;
		this.membre = membre;
		this.contrat = contrat;
	}

	public Contrattache(Tache tache, Membre membre, Contrat contrat,
			Integer cout, Date dateDebut, Date dateFin) {
		this.tache = tache;
		this.membre = membre;
		this.contrat = contrat;
		this.cout = cout;
		this.dateDebut = dateDebut;
		this.dateFin = dateFin;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "contrat"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "idContrat", unique = true, nullable = false)
	public Integer getIdContrat() {
		return this.idContrat;
	}

	public void setIdContrat(Integer idContrat) {
		this.idContrat = idContrat;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "idProjet", referencedColumnName = "idProjet", nullable = false),
			@JoinColumn(name = "idTache", referencedColumnName = "idTache", nullable = false) })
	public Tache getTache() {
		return this.tache;
	}

	public void setTache(Tache tache) {
		this.tache = tache;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idMembre", nullable = false)
	public Membre getMembre() {
		return this.membre;
	}

	public void setMembre(Membre membre) {
		this.membre = membre;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Contrat getContrat() {
		return this.contrat;
	}

	public void setContrat(Contrat contrat) {
		this.contrat = contrat;
	}

	@Column(name = "cout", precision = 8, scale = 0)
	public Integer getCout() {
		return this.cout;
	}

	public void setCout(Integer cout) {
		this.cout = cout;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateDebut", length = 19)
	public Date getDateDebut() {
		return this.dateDebut;
	}

	public void setDateDebut(Date dateDebut) {
		this.dateDebut = dateDebut;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dateFin", length = 19)
	public Date getDateFin() {
		return this.dateFin;
	}

	public void setDateFin(Date dateFin) {
		this.dateFin = dateFin;
	}

}
